{ // block 0
    persist trainable param linear_0.w_0 : LOD_TENSOR.shape(1, 50).dtype(float32).stop_gradient(False)
    persist trainable param linear_0.b_0 : LOD_TENSOR.shape(50,).dtype(float32).stop_gradient(False)
    persist trainable param linear_1.w_0 : LOD_TENSOR.shape(50, 50).dtype(float32).stop_gradient(False)
    persist trainable param linear_1.b_0 : LOD_TENSOR.shape(50,).dtype(float32).stop_gradient(False)
    persist trainable param linear_2.w_0 : LOD_TENSOR.shape(50, 50).dtype(float32).stop_gradient(False)
    persist trainable param linear_2.b_0 : LOD_TENSOR.shape(50,).dtype(float32).stop_gradient(False)
    persist trainable param linear_3.w_0 : LOD_TENSOR.shape(50, 1).dtype(float32).stop_gradient(False)
    persist trainable param linear_3.b_0 : LOD_TENSOR.shape(1,).dtype(float32).stop_gradient(False)
    var inputs : LOD_TENSOR.shape(20, 1).dtype(float32).stop_gradient(False)
    var targets : LOD_TENSOR.shape(20, 1).dtype(float32).stop_gradient(False)
    var linear_4.tmp_0 : LOD_TENSOR.shape(20, 50).dtype(float32).stop_gradient(False)
    var linear_4.tmp_1 : LOD_TENSOR.shape(20, 50).dtype(float32).stop_gradient(False)
    var tanh_0.tmp_0 : LOD_TENSOR.shape(20, 50).dtype(float32).stop_gradient(False)
    var linear_5.tmp_0 : LOD_TENSOR.shape(20, 50).dtype(float32).stop_gradient(False)
    var linear_5.tmp_1 : LOD_TENSOR.shape(20, 50).dtype(float32).stop_gradient(False)
    var tanh_1.tmp_0 : LOD_TENSOR.shape(20, 50).dtype(float32).stop_gradient(False)
    var linear_6.tmp_0 : LOD_TENSOR.shape(20, 50).dtype(float32).stop_gradient(False)
    var linear_6.tmp_1 : LOD_TENSOR.shape(20, 50).dtype(float32).stop_gradient(False)
    var tanh_2.tmp_0 : LOD_TENSOR.shape(20, 50).dtype(float32).stop_gradient(False)
    var linear_7.tmp_0 : LOD_TENSOR.shape(20, 1).dtype(float32).stop_gradient(False)
    var linear_7.tmp_1 : LOD_TENSOR.shape(20, 1).dtype(float32).stop_gradient(False)

    {Out=['linear_0.w_0']} = uniform_random(inputs={ShapeTensor=[], ShapeTensorList=[]}, diag_num = 0, diag_step = 0, diag_val = 1.0, dtype = 5, max = 0.34299716353416443, min = -0.34299716353416443, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [1, 50], with_quant_attr = False)
    {Out=['linear_0.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], place_type = -1, shape = [50], str_value = 0.0, use_mkldnn = False, value = 0.0, with_quant_attr = False)
    {Out=['linear_1.w_0']} = uniform_random(inputs={ShapeTensor=[], ShapeTensorList=[]}, diag_num = 0, diag_step = 0, diag_val = 1.0, dtype = 5, max = 0.24494896829128265, min = -0.24494896829128265, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [50, 50], with_quant_attr = False)
    {Out=['linear_1.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], place_type = -1, shape = [50], str_value = 0.0, use_mkldnn = False, value = 0.0, with_quant_attr = False)
    {Out=['linear_2.w_0']} = uniform_random(inputs={ShapeTensor=[], ShapeTensorList=[]}, diag_num = 0, diag_step = 0, diag_val = 1.0, dtype = 5, max = 0.24494896829128265, min = -0.24494896829128265, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [50, 50], with_quant_attr = False)
    {Out=['linear_2.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], place_type = -1, shape = [50], str_value = 0.0, use_mkldnn = False, value = 0.0, with_quant_attr = False)
    {Out=['linear_3.w_0']} = uniform_random(inputs={ShapeTensor=[], ShapeTensorList=[]}, diag_num = 0, diag_step = 0, diag_val = 1.0, dtype = 5, max = 0.34299716353416443, min = -0.34299716353416443, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [50, 1], with_quant_attr = False)
    {Out=['linear_3.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], place_type = -1, shape = [1], str_value = 0.0, use_mkldnn = False, value = 0.0, with_quant_attr = False)
    {Out=['linear_4.tmp_0']} = matmul_v2(inputs={X=['inputs'], Y=['linear_0.w_0']}, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], trans_x = False, trans_y = False, use_mkldnn = False, with_quant_attr = False)
    {Out=['linear_4.tmp_1']} = elementwise_add(inputs={X=['linear_4.tmp_0'], Y=['linear_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, with_quant_attr = False, x_data_format = , y_data_format = )
    {Out=['tanh_0.tmp_0']} = tanh(inputs={X=['linear_4.tmp_1']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False, with_quant_attr = False)
    {Out=['linear_5.tmp_0']} = matmul_v2(inputs={X=['tanh_0.tmp_0'], Y=['linear_1.w_0']}, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], trans_x = False, trans_y = False, use_mkldnn = False, with_quant_attr = False)
    {Out=['linear_5.tmp_1']} = elementwise_add(inputs={X=['linear_5.tmp_0'], Y=['linear_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, with_quant_attr = False, x_data_format = , y_data_format = )
    {Out=['tanh_1.tmp_0']} = tanh(inputs={X=['linear_5.tmp_1']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False, with_quant_attr = False)
    {Out=['linear_6.tmp_0']} = matmul_v2(inputs={X=['tanh_1.tmp_0'], Y=['linear_2.w_0']}, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], trans_x = False, trans_y = False, use_mkldnn = False, with_quant_attr = False)
    {Out=['linear_6.tmp_1']} = elementwise_add(inputs={X=['linear_6.tmp_0'], Y=['linear_2.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, with_quant_attr = False, x_data_format = , y_data_format = )
    {Out=['tanh_2.tmp_0']} = tanh(inputs={X=['linear_6.tmp_1']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False, with_quant_attr = False)
    {Out=['linear_7.tmp_0']} = matmul_v2(inputs={X=['tanh_2.tmp_0'], Y=['linear_3.w_0']}, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], trans_x = False, trans_y = False, use_mkldnn = False, with_quant_attr = False)
    {Out=['linear_7.tmp_1']} = elementwise_add(inputs={X=['linear_7.tmp_0'], Y=['linear_3.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, with_quant_attr = False, x_data_format = , y_data_format = )
}

